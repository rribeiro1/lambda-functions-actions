name: Packing

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]

jobs:
  packing:
    name: Packing Functions
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install Pipenv
        run: sudo pip install pipenv

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set yarn global bin path
        run: yarn config set prefix $(yarn cache dir)

      - name: Add yarn bin path to system path
        run: echo $(yarn global bin) >> $GITHUB_PATH

      - name: Set yarn global installation path
        run: yarn config set global-folder $(yarn cache dir)

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-version }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Adding serverless globally
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn global add serverless

      - name: Packing functions
        run: yarn run package

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .serverless/lambda-functions-experiments.zip
            .serverless/serverless-state.json
          if-no-files-found: error
